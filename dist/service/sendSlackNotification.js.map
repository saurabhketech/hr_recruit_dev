{"version":3,"sources":["../../src/service/sendSlackNotification.js"],"names":["WebClient","require","slackNotification","data","user_email","Promise","resolve","reject","Slack","findOne","where","status","then","slackInfo","token","SlackToken","web","channel","selected_channel","ChannelId","userIcon","response","chat","postMessage","err","res","email","callback","error","body","JSON","parse","entry","gphoto$thumbnail","$t"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAHA,IAAIA,YAAYC,QAAQ,eAAR,EAAyBD,SAAzC;;;AAKA,IAAME,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,UAAP,EAAsB;AAC5C,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,qBAAGC,KAAH,CAASC,OAAT,CAAiB,EAAEC,OAAO,EAAEC,QAAQ,IAAV,EAAT,EAAjB,EAA8CC,IAA9C,CAAmD,UAACC,SAAD,EAAe;AAC9D,gBAAIC,QAAQD,YAAYA,UAAUC,KAAtB,GAA8B,iBAAOC,UAAjD;AACA,gBAAIC,MAAM,IAAIhB,SAAJ,CAAcc,KAAd,CAAV;AACA,gBAAIG,UAAUJ,YAAYA,UAAUK,gBAAtB,GAAyC,iBAAOC,SAA9D;AACAC,qBAAShB,UAAT,EAAqB,UAASiB,QAAT,EAAmB;AACpClB,wBAAQ,iBAAiBkB,QAAzB;AACAL,oBAAIM,IAAJ,CAASC,WAAT,CAAqBN,OAArB,EAA8Bd,IAA9B,EAAoC,UAASqB,GAAT,EAAcC,GAAd,EAAmB;AACnD,wBAAID,GAAJ,EAAS;AACLjB,+BAAOiB,GAAP;AACH,qBAFD,MAEO;AACHlB,gCAAQmB,GAAR;AACH;AACJ,iBAND;AAOH,aATD;;AAWA,qBAASL,QAAT,CAAkBM,KAAlB,EAAyBC,QAAzB,EAAmC;AAC/B,4FAA2DD,KAA3D,gBAA6E,UAASE,KAAT,EAAgBP,QAAhB,EAA0BQ,IAA1B,EAAgC;AACzG,wBAAG,CAACD,KAAJ,EAAU;AACND,iCAASG,KAAKC,KAAL,CAAWF,IAAX,EAAiBG,KAAjB,CAAuBC,gBAAvB,CAAwCC,EAAjD;AACH;AACJ,iBAJD;AAKH;AACJ,SAtBD;AAwBH,KAzBM,CAAP;AA0BH,CA3BD;;kBA6Be;AACXhC;AADW,C","file":"sendSlackNotification.js","sourcesContent":["let WebClient = require('@slack/client').WebClient;\nimport db from \"../db.js\";\nimport config from \"../config\";\nimport request from \"request\";\n\nconst slackNotification = (data, user_email) => {\n    return new Promise((resolve, reject) => {\n        db.Slack.findOne({ where: { status: true } }).then((slackInfo) => {\n            let token = slackInfo ? slackInfo.token : config.SlackToken\n            let web = new WebClient(token);\n            let channel = slackInfo ? slackInfo.selected_channel : config.ChannelId;\n            userIcon(user_email, function(response) {\n                data += \"\\n picture: \" + response;\n                web.chat.postMessage(channel, data, function(err, res) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(res)\n                    }\n                });\n            })\n\n            function userIcon(email, callback) {\n                request(`http://picasaweb.google.com/data/entry/api/user/${email}?alt=json`, function(error, response, body) {\n                    if(!error){\n                        callback(JSON.parse(body).entry.gphoto$thumbnail.$t)\n                    }\n                });\n            }\n        })\n\n    })\n}\n\nexport default {\n    slackNotification\n}"]}